apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.blues.app"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        buildToolsVersion rootProject.ext.buildToolsVersion

        resConfigs "zh"

        ndk{ abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86' }

        //multiDex的一些相关配置，这样配置可以让你的编译速度更快
        dexOptions {
            //最大堆内存
            javaMaxHeapSize "8g"
            //是否支持大工程模式
            jumboMode true
            //预编译
            preDexLibraries true
            //
            dexInProcess true
            //最大进程数
            maxProcessCount 8
            //线程数
            threadCount 8
        }
    }

    //这个是解决lint报错的代码
    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        checkReleaseBuilds false//方法过时警告的开关
        disable 'InvalidPackage' //Some libraries have issues with this.
        disable 'OldTargetApi' //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities' //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder' //For testing purpose. This is safe to remove.
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            aidl.srcDirs = ['src/main/aidl']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
            jniLibs.srcDir 'src/main/jniLibs'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {

        sourceCompatibility JavaVersion.VERSION_1_8

        targetCompatibility JavaVersion.VERSION_1_8

    }
    //防止aapt工具可能会填充已压缩的PNG文件以加快编译速度
    aaptOptions {
        cruncherEnabled = false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    //rxjava
    implementation 'io.reactivex:rxjava:1.3.8'
    //rxandroid
    implementation 'io.reactivex:rxandroid:1.2.1'
    //retrofit2
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    //okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.12.1'
    //网络请求拦截器
    implementation 'com.squareup.okhttp3:logging-interceptor:3.13.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.5.0'
    //easyrecyclerview
    implementation 'com.jude:easyrecyclerview:4.4.2'
    implementation 'com.android.support:multidex:1.0.3'
    //glide相关
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.9.0'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'

    //smartRefreshLayout
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0'//没有使用特殊Header，可以不加这行

    //leakcanary
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'

    //room google官方数据库
    implementation "android.arch.persistence.room:runtime:1.1.1"
    annotationProcessor "android.arch.persistence.room:compiler:1.1.1"

    //nicevideoplayer通过library库来依赖，因为需要做一些小修改
    api project(':nicevideoplayer')
}
