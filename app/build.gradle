import com.blues.plugin.AndroidX
import com.blues.plugin.BaseConfig
import com.blues.plugin.Coil
import com.blues.plugin.Koin
import com.blues.plugin.Kotlin
import com.blues.plugin.Network
import com.blues.plugin.Others
import com.blues.plugin.Room
import com.blues.plugin.UiComponent

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

static def releaseTime() {  //获取时间的方法,在Android节点外,另外的节点
    return new Date().format("yyyyMMddHHmm", TimeZone.getDefault())
}

android {
    compileSdkVersion BaseConfig.compileSdkVersion
    defaultConfig {
        applicationId BaseConfig.applicationId
        minSdkVersion BaseConfig.minSdkVersion
        targetSdkVersion BaseConfig.targetSdkVersion
        versionCode BaseConfig.versionCode
        versionName BaseConfig.versionName
        buildToolsVersion BaseConfig.buildToolsVersion

        resConfigs "zh"

        ndk { abiFilters 'armeabi', 'armeabi-v7a' }
    }

    //这个是解决lint报错的代码
    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        checkReleaseBuilds false//方法过时警告的开关
        disable 'InvalidPackage' //Some libraries have issues with this.
        disable 'OldTargetApi' //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities' //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder' //For testing purpose. This is safe to remove.
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            aidl.srcDirs = ['src/main/aidl']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
            jniLibs.srcDir 'src/main/jniLibs'
        }
    }

    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            android.applicationVariants.all {
                variant ->
                    if (variant.buildType.name == 'release') {
                        variant.outputs.all {
                            outputFileName = "BluesApp_${releaseTime()}.apk"
                        }
                    }
            }
        }
    }
    compileOptions {

        sourceCompatibility JavaVersion.VERSION_1_8

        targetCompatibility JavaVersion.VERSION_1_8

    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    //防止aapt工具可能会填充已压缩的PNG文件以加快编译速度
    aaptOptions {
        cruncherEnabled = false
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation Others.multidex
    implementation AndroidX.appcompat
    implementation AndroidX.constraintlayout
    implementation AndroidX.viewmodel
    implementation AndroidX.livedata

    implementation Network.retrofit
    implementation Network.okhttp3
    implementation Network.okhttp3Interceptor
    implementation Network.fastJson
    implementation Network.convertor

    implementation UiComponent.material
    implementation UiComponent.easyrecyclerview
    implementation UiComponent.baseRecyclerViewAdapter
    implementation UiComponent.smartRefresh
    implementation UiComponent.smartRefreshHeader//没有使用特殊Header，可以不加这行
    implementation UiComponent.markdown4j
    implementation UiComponent.viewpager2

    implementation Room.runtime
    annotationProcessor Room.compiler

    implementation Kotlin.ktx
    implementation Kotlin.stdlibJdk7
    implementation Kotlin.coroutines

    implementation Koin.core
    implementation Coil.core
    implementation Coil.gif
    //leakcanary
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'

    //nicevideoplayer通过library库来依赖，因为需要做一些小修改
    api project(':nicevideoplayer')
}
repositories {
    mavenCentral()
}
